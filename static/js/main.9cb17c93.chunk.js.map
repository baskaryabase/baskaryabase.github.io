{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["SubscriberLIst","state","open","list","id","name","number","view","handleClickOpen","_this","setState","handleClose","handleChange","event","Object","defineProperty","target","value","addToList","concat","toConsumableArray","_this2","this","classes","props","react_default","a","createElement","style","margin","Grid_default","float","Button_default","variant","color","onClick","container","justify","flexDirection","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","height","TextField_default","label","className","textField","onChange","DialogActions_default","bind","autoFocus","xs","Paper_default","root","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","l","i","IconButton_default","button","aria-label","Edit_default","slice","Delete_default","direction","type","React","Component","withStyles","theme","width","marginTop","spacing","unit","overflowX","minWidth","marginLeft","marginRight","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9cb17c93.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = (theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t\tmarginTop: theme.spacing.unit * 3,\n\t\toverflowX: 'auto'\n\t},\n\ttable: {\n\t\tminWidth: 700\n\t},\n\ttextField: {\n\t\tmarginLeft: theme.spacing.unit,\n\t\tmarginRight: theme.spacing.unit\n\t}\n});\n\nclass SubscriberLIst extends React.Component {\n\tstate = {\n\t\topen: false,\n\t\tlist: [ { id: 0, name: 'Baskar', number: 7904852282 } ],\n\t\tname: '',\n\t\tnumber: '',\n\t\tid: 0,\n\t\tview: 'list'\n\t};\n\thandleClickOpen = () => {\n\t\tthis.setState({ open: true });\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState({ open: false });\n\t};\n\thandleChange = (name) => (event) => {\n\t\tthis.setState({\n\t\t\t[name]: event.target.value\n\t\t});\n\t};\n\taddToList = () => {\n\t\tthis.setState({\n\t\t\tlist: [ ...this.state.list, { id: this.state.id + 1, name: this.state.name, number: this.state.number } ],\n\t\t\tid: this.state.id + 1,\n\t\t\tview: 'list'\n\t\t});\n\t};\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\tif (this.state.view == 'list') {\n\t\t\treturn (\n\t\t\t\t<div style={{ margin: 100 }}>\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<div style={{ float: 'right' }}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({ view: 'add' });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAdd New SubScriber\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Grid container justify=\"center\" flexDirection={'column'}>\n\t\t\t\t\t\t\t{/* ADD A Subscriber modal */}\n\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\topen={this.state.open}\n\t\t\t\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\t\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\t\t\t\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n\t\t\t\t\t\t\t\t<DialogContent style={{ height: 50 }}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"outlined-name\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange('name')}\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"outlined-name\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.number}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange('number')}\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClose} color=\"primary\">\n\t\t\t\t\t\t\t\t\t\tDisagree\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.addToList.bind(this)} color=\"primary\" autoFocus>\n\t\t\t\t\t\t\t\t\t\tAgree\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t<Grid xs={12}>\n\t\t\t\t\t\t\t\t<Paper className={classes.root}>\n\t\t\t\t\t\t\t\t\t<Table className={classes.table}>\n\t\t\t\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>#</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>Name</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">Phone Number</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">Actions</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.list.map((l, i) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>{l.id}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>{l.name}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{l.number}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Delete\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Delete\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.list.slice(0, i),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.list.slice(i + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div style={{ margin: 100 }}>\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" onClick={() => this.setState({ view: 'list' })}>\n\t\t\t\t\t\t\t\tGo Back\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Grid container justify=\"center\" direction={'column'}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"outlined-name\"\n\t\t\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\tonChange={this.handleChange('name')}\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"outlined-name\"\n\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\n\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\tvalue={this.state.number}\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange('number')}\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t\tName:{this.state.name}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\tNumber:{this.state.number}\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tstyle={{ float: 'right' }}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tonClick={this.addToList.bind(this)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Subscriber\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nSubscriberLIst.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SubscriberLIst);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}